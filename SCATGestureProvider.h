/*
* This header is generated by classdump-dyld 1.0
* on Monday, August 15, 2016 at 11:35:24 AM Eastern Daylight Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/CoreServices/AssistiveTouch.app/assistivetouchd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <assistivetouchd/assistivetouchd-Structs.h>
#import <assistivetouchd/SCATElementManager.h>
#import <assistivetouchd/SCATMenuObserver.h>
#import <assistivetouchd/SCATPointPickerDelegate.h>
#import <assistivetouchd/SCATMenuGeneralGestureItemsViewDelegate.h>
#import <assistivetouchd/SCATMenuFlickItemsViewDelegate.h>
#import <assistivetouchd/SCATMenuForceTouchItemsViewDelegate.h>
#import <assistivetouchd/SCATMenuFingerItemsViewDelegate.h>
#import <assistivetouchd/SCATMenuPanItemsViewDelegate.h>
#import <assistivetouchd/SCATMenuStopContinuousGestureItemViewDelegate.h>
#import <assistivetouchd/SCATMenuGestureConfirmationItemsViewDelegate.h>
#import <assistivetouchd/SCATMenuPinchItemsViewDelegate.h>
#import <assistivetouchd/SCATMenuCustomGestureItemsViewDelegate.h>
#import <assistivetouchd/SCATGestureDrawingViewDelegate.h>
#import <assistivetouchd/SCATModernMenuItemDelegate.h>
#import <assistivetouchd/SCATGestureFingersElementDelegate.h>

@protocol SCATGestureProviderDelegate;
@class SCATMenu, NSTimer, SCATPointPicker, SCATGestureDrawingElementManager, NSMutableArray, NSString, SCATGestureFingersElement, SCATGestureArrowView, SCATElementManager, NSArray;

@interface SCATGestureProvider : SCATElementManager <SCATMenuObserver, SCATPointPickerDelegate, SCATMenuGeneralGestureItemsViewDelegate, SCATMenuFlickItemsViewDelegate, SCATMenuForceTouchItemsViewDelegate, SCATMenuFingerItemsViewDelegate, SCATMenuPanItemsViewDelegate, SCATMenuStopContinuousGestureItemViewDelegate, SCATMenuGestureConfirmationItemsViewDelegate, SCATMenuPinchItemsViewDelegate, SCATMenuCustomGestureItemsViewDelegate, SCATGestureDrawingViewDelegate, SCATModernMenuItemDelegate, SCATGestureFingersElementDelegate> {

	SCATMenu* _menu;
	NSTimer* _tellMeWhenGestureTimer;
	SCATPointPicker* _lineGesturePointPicker;
	SCATGestureDrawingElementManager* _drawingElementManager;
	NSMutableArray* _continuousGesturePoints;
	NSMutableArray* _continuousGestureTimes;
	NSString* _continuousGestureName;
	BOOL _showsFingers;
	unsigned long long _numberOfFingersForGestures;
	BOOL _isReversingContinuousGesture;
	BOOL _needsScanning;
	double _currentForce;
	double _targetForce;
	double _currentY;
	int _currentOrbGestureMode;
	SCATGestureFingersElement* _elementForFingers;
	BOOL _hidden;
	BOOL _isPinching;
	BOOL _shouldAllowFingersForContinuousGesture;
	id<SCATGestureProviderDelegate> _delegate;
	SCATGestureArrowView* _arrowView;
	SCATElementManager* _currentSwitchController;
	NSArray* _panFingerPositions;
	NSArray* _pinchFingerOriginalPositions;
	double _pinchRadius;
	double _pinchAngle;
	unsigned long long _lineGestureState;
	unsigned long long _lineGestureType;
	double _alphaForFingers;
	CGPoint _startingScreenPointForGestures;
	CGPoint _pinchFulcrum;
	CGPoint _endPointForLineGesture;

}

@property (assign,nonatomic) id<SCATGestureProviderDelegate> delegate;                  //@synthesize delegate=_delegate - In the implementation block
@property (assign,getter=isHidden,nonatomic) BOOL hidden;                               //@synthesize hidden=_hidden - In the implementation block
@property (nonatomic,readonly) id<SCATElement> elementForFingers; 
@property (nonatomic,retain) SCATGestureArrowView * arrowView;                          //@synthesize arrowView=_arrowView - In the implementation block
@property (assign,nonatomic) CGPoint startingScreenPointForGestures;                    //@synthesize startingScreenPointForGestures=_startingScreenPointForGestures - In the implementation block
@property (nonatomic,retain) SCATElementManager * currentSwitchController;              //@synthesize currentSwitchController=_currentSwitchController - In the implementation block
@property (nonatomic,retain) NSArray * panFingerPositions;                              //@synthesize panFingerPositions=_panFingerPositions - In the implementation block
@property (assign,nonatomic) BOOL isPinching;                                           //@synthesize isPinching=_isPinching - In the implementation block
@property (nonatomic,retain) NSArray * pinchFingerOriginalPositions;                    //@synthesize pinchFingerOriginalPositions=_pinchFingerOriginalPositions - In the implementation block
@property (assign,nonatomic) CGPoint pinchFulcrum;                                      //@synthesize pinchFulcrum=_pinchFulcrum - In the implementation block
@property (assign,nonatomic) double pinchRadius;                                        //@synthesize pinchRadius=_pinchRadius - In the implementation block
@property (assign,nonatomic) double pinchAngle;                                         //@synthesize pinchAngle=_pinchAngle - In the implementation block
@property (assign,nonatomic) unsigned long long lineGestureState;                       //@synthesize lineGestureState=_lineGestureState - In the implementation block
@property (assign,nonatomic) unsigned long long lineGestureType;                        //@synthesize lineGestureType=_lineGestureType - In the implementation block
@property (assign,nonatomic) CGPoint endPointForLineGesture;                            //@synthesize endPointForLineGesture=_endPointForLineGesture - In the implementation block
@property (assign,nonatomic) BOOL shouldAllowFingersForContinuousGesture;               //@synthesize shouldAllowFingersForContinuousGesture=_shouldAllowFingersForContinuousGesture - In the implementation block
@property (assign,nonatomic) double alphaForFingers;                                    //@synthesize alphaForFingers=_alphaForFingers - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(BOOL)shouldUpdateMenuItem:(id)arg1 ;
-(void)menuItemWasActivated:(id)arg1 ;
-(void)pointPickerDidFinishSweeping:(id)arg1 ;
-(void)driver:(id)arg1 willFocusOnContext:(id)arg2 ;
-(void)driver:(id)arg1 willUnfocusFromContext:(id)arg2 ;
-(void)driver:(id)arg1 didFocusOnContext:(id)arg2 ;
-(id)lastElementWithOptions:(int*)arg1 ;
-(id)firstElementWithOptions:(int*)arg1 ;
-(BOOL)handleInputAction:(long long)arg1 withElement:(id)arg2 ;
-(BOOL)shouldKeepScannerAwake;
-(void)replayGesture:(id)arg1 ;
-(void)fingersElement:(id)arg1 didBecomeFocused:(BOOL)arg2 ;
-(void)didActivateFingersElement:(id)arg1 ;
-(id)initWithMenu:(id)arg1 ;
-(BOOL)canBeActiveElementManager;
-(void)didChooseForceTouchMaximum:(id)arg1 ;
-(void)didChooseForceTouchCancel:(id)arg1 ;
-(void)didChoosePreviewActions:(id)arg1 ;
-(BOOL)allowsDwellSelection;
-(BOOL)allowsDwellScanningToAbortAfterTimeout;
-(void)_clearTellMeWhenTimer;
-(void)_clearArrowView;
-(void)_updateStartingPointForGesturesWithScreenPoint:(id)arg1 ;
-(void)_updateVisibleFingers;
-(void)_updateShowsFingers;
-(SCATGestureArrowView *)arrowView;
-(void)setStartingScreenPointForGestures:(CGPoint)arg1 ;
-(CGPoint)startingScreenPointForGestures;
-(id)_startingPointsAsValues;
-(id)_pointStringsFromPointValues:(id)arg1 ;
-(CGPoint)_startingPointForGestures;
-(unsigned long long)_numberOfFingers;
-(void)setAlphaForFingers:(double)arg1 ;
-(void)_resetContinuousGestureData;
-(void)_addPointsToContinuousGestureData:(id)arg1 ;
-(void)_saveRecentGesture:(id)arg1 ;
-(void)setPanFingerPositions:(NSArray *)arg1 ;
-(void)setShouldAllowFingersForContinuousGesture:(BOOL)arg1 ;
-(void)_performGesture:(id)arg1 ;
-(CGPoint)pinchFulcrum;
-(CGPoint)_fingerPositionForMidpoint:(CGPoint)arg1 ;
-(double)pinchRadius;
-(double)_pinchRadiusAdjustedByDelta:(double)arg1 ;
-(double)_pinchAngleAdjustedByDelta:(double)arg1 ;
-(NSArray *)pinchFingerOriginalPositions;
-(id)_pinchPositionsWithRadius:(double)arg1 angle:(double)arg2 ;
-(id)_pointValuesFromPointStrings:(id)arg1 ;
-(void)setPinchRadius:(double)arg1 ;
-(void)_updatePinchPositionsWithAttemptedRadiusDelta:(double)arg1 angleDelta:(double)arg2 ;
-(NSArray *)panFingerPositions;
-(id)_panPositionsAdjustedByDelta:(CGSize)arg1 ;
-(id)_startingPointsAsStrings;
-(void)_panByDelta:(CGSize)arg1 ;
-(CGPoint)endPointForLineGesture;
-(unsigned long long)lineGestureType;
-(void)setIsPinching:(BOOL)arg1 ;
-(double)alphaForFingers;
-(BOOL)isPinching;
-(void)_startTellMeWhenTimerWithSelector:(SEL)arg1 interval:(double)arg2 ;
-(void)setArrowView:(SCATGestureArrowView *)arg1 ;
-(unsigned long long)lineGestureState;
-(SCATElementManager *)currentSwitchController;
-(unsigned long long)_numberOfFingersWithGestureSheet:(BOOL)arg1 ;
-(BOOL)shouldAllowFingersForContinuousGesture;
-(void)_setShowsFingers:(BOOL)arg1 ;
-(CGRect)_rectForFingers:(id)arg1 ;
-(void)setLineGestureState:(unsigned long long)arg1 ;
-(void)setCurrentSwitchController:(SCATElementManager *)arg1 ;
-(void)setLineGestureType:(unsigned long long)arg1 ;
-(id)_promptForLineGesture:(unsigned long long)arg1 ;
-(void)setEndPointForLineGesture:(CGPoint)arg1 ;
-(void)_startPickingEndPointForLineGesture:(unsigned long long)arg1 ;
-(void)_performTapGestureForDoubleTap:(BOOL)arg1 ;
-(id)tapGestureMenuItemForSheet:(id)arg1 ;
-(id)tapAndHoldGestureMenuItemForSheet:(id)arg1 ;
-(void)_performFlickGestureWithAngle:(double)arg1 name:(id)arg2 ;
-(void)_didChooseFlickWithAngle:(double)arg1 name:(id)arg2 ;
-(id)_currentElementExcludingSCATMenuElements;
-(void)_updateOrbGestureModeWithElement:(id)arg1 ;
-(void)_prepareToBeginContinuousGesture;
-(void)_forceTouch;
-(void)_initializeContinuousGestureDataWithName:(id)arg1 points:(id)arg2 ;
-(void)_handleCompletedContinuousGesture;
-(void)_forceTouchSwipeUp;
-(void)_endForceTouchGestureAndCloseMenu;
-(void)_startTellMeWhenTimerWithSelector:(SEL)arg1 ;
-(void)_panLeft;
-(void)_didChoosePanWithName:(id)arg1 selector:(SEL)arg2 ;
-(void)_panRight;
-(void)_panUp;
-(void)_panDown;
-(CGPoint)_midpointFromFingerPosition:(CGPoint)arg1 ;
-(void)setPinchFulcrum:(CGPoint)arg1 ;
-(void)setPinchFingerOriginalPositions:(NSArray *)arg1 ;
-(void)_pinchIn;
-(void)_didChoosePinchItemWithName:(id)arg1 selector:(SEL)arg2 ;
-(void)_pinchOut;
-(void)_rotateClockwise;
-(void)_rotateCounterclockwise;
-(void)_startPinchMode;
-(void)_endPinchMode;
-(CGRect)_rectToClearForPinchGesture;
-(void)_finishLineGesture;
-(void)_clearLineGestureState;
-(void)_setNumberOfFingersForGestures:(unsigned long long)arg1 ;
-(CGPoint)_centerOfFingersForGesture:(id)arg1 ;
-(id)_repositionedGestureFromOriginalGesture:(id)arg1 ;
-(BOOL)_isPerformingContinuousGesture;
-(void)_startConfirmingLineGestureWithEndpoint:(CGPoint)arg1 ;
-(void)_requestSwitchControllerPrivileges;
-(void)_resignSwitchControllerPrivileges;
-(id)elementAfter:(id)arg1 didWrap:(BOOL*)arg2 options:(int*)arg3 ;
-(id)elementBefore:(id)arg1 didWrap:(BOOL*)arg2 options:(int*)arg3 ;
-(void)scannerWillMakeManagerActive:(id)arg1 ;
-(void)scannerWillMakeManagerInactive:(id)arg1 ;
-(void)_performTap;
-(void)_performTapAndHold;
-(void)menuWillAppear:(id)arg1 ;
-(void)menuDidAppear:(id)arg1 ;
-(void)menuWillDisappear:(id)arg1 ;
-(void)menuDidDisappear:(id)arg1 ;
-(void)menuDidFinishTransition:(id)arg1 ;
-(void)menuDidUpdateTipObject:(id)arg1 ;
-(void)pointPicker:(id)arg1 didPickPoint:(CGPoint)arg2 ;
-(void)pointPicker:(id)arg1 didSweepIntoFocusContext:(id)arg2 isRefiningPoint:(BOOL)arg3 ;
-(void)pointPicker:(id)arg1 didSweepOutOfFocusContext:(id)arg2 isRefiningPoint:(BOOL)arg3 ;
-(void)didChooseFavorites:(id)arg1 ;
-(void)didChoosePanGesture:(id)arg1 ;
-(void)didChooseFlickGesture:(id)arg1 ;
-(void)didChoosePinchGesture:(id)arg1 ;
-(void)didChooseDragGesture:(id)arg1 ;
-(void)didChooseDoubleTapGesture:(id)arg1 ;
-(void)didChooseHoldAndDragGesture:(id)arg1 ;
-(void)didChooseDrawingGesture:(id)arg1 ;
-(void)didChooseFingers:(id)arg1 ;
-(void)didChooseForceTouchGesture:(id)arg1 ;
-(id)tapGestureMenuItem:(id)arg1 ;
-(id)tapAndHoldGestureMenuItem:(id)arg1 ;
-(unsigned long long)numberOfFingers:(id)arg1 ;
-(void)didChooseFlickLeft:(id)arg1 ;
-(void)didChooseFlickRight:(id)arg1 ;
-(void)didChooseFlickUp:(id)arg1 ;
-(void)didChooseFlickDown:(id)arg1 ;
-(void)didChooseArbitraryFlick:(id)arg1 ;
-(void)didChooseMorePreviewActions;
-(void)fingerItemsViewController:(id)arg1 didChooseNumberOfFingers:(unsigned long long)arg2 ;
-(void)didChoosePanLeft:(id)arg1 ;
-(void)didChoosePanRight:(id)arg1 ;
-(void)didChoosePanUp:(id)arg1 ;
-(void)didChoosePanDown:(id)arg1 ;
-(void)didChooseStop:(id)arg1 ;
-(CGRect)rectToClearForStop:(id)arg1 ;
-(id)nameForConfirmationButton:(id)arg1 ;
-(void)didConfirmGesture:(id)arg1 ;
-(void)didRequestRedoGesture:(id)arg1 ;
-(void)didCancelGesture:(id)arg1 ;
-(void)didPushPinchItemsViewController:(id)arg1 ;
-(void)willPopPinchItemsViewController:(id)arg1 ;
-(void)didChoosePinchIn:(id)arg1 ;
-(void)didChoosePinchOut:(id)arg1 ;
-(void)didChooseRotateClockwise:(id)arg1 ;
-(void)didChooseRotateCounterclockwise:(id)arg1 ;
-(CGRect)rectToClearForPinchGesture:(id)arg1 ;
-(id)contextForCustomGestureItemsViewController:(id)arg1 ;
-(void)customGestureItemsViewController:(id)arg1 didChooseGesture:(id)arg2 ;
-(void)didChooseAddRecentInCustomGestureItemsViewController:(id)arg1 ;
-(void)didChooseCreateInCustomGestureItemsViewController:(id)arg1 ;
-(void)touchDownForDrawingViewController:(id)arg1 ;
-(void)touchUpForDrawingViewController:(id)arg1 ;
-(BOOL)drawingViewController:(id)arg1 moveFingersToPoints:(id)arg2 ;
-(void)exitDrawingViewController:(id)arg1 ;
-(void)drawingViewController:(id)arg1 shouldResetScanningFromElement:(id)arg2 ;
-(id<SCATElement>)elementForFingers;
-(CGRect)rectToClearForFingersWithGestureSheet:(BOOL)arg1 ;
-(id)gesturesSheet;
-(void)setDelegate:(id<SCATGestureProviderDelegate>)arg1 ;
-(void)dealloc;
-(BOOL)isHidden;
-(void)setHidden:(BOOL)arg1 ;
-(id<SCATGestureProviderDelegate>)delegate;
-(id)identifier;
-(void)orientationDidChange:(id)arg1 ;
-(void)setPinchAngle:(double)arg1 ;
-(double)pinchAngle;
@end

